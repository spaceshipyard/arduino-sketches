// SoftwareSerial - Version: Latest 
#include <SoftwareSerial.h>

#define PIN_READ_1 2 
#define PIN_READ_2 3

#define rxPin1 4
#define txPin1 5

#define rxPin2 8
#define txPin2 9

#define PULSES_PER_ROTATION 946

volatile unsigned int pulses1;
volatile unsigned int pulses2;
float rpm;
unsigned long timeOld;

SoftwareSerial port1(rxPin1, txPin1);
SoftwareSerial port2(rxPin2, txPin2);

void counter()
{
 pulses1++;
}
void counter2()
{
 pulses2++;
}
 
void setup()
{
  Serial.begin(9600);
  while (!Serial) {
  }
  
 pinMode(rxPin1, INPUT);
 pinMode(txPin1, OUTPUT);
 
 pinMode(rxPin2, INPUT);
 pinMode(txPin2, OUTPUT);

 port1.begin(9600);
 port2.begin(9600);
  
 pinMode(PIN_READ_1, INPUT);
 pulses1 = 0;
 pulses2 = 0;
 timeOld = 0;
 attachInterrupt(digitalPinToInterrupt(PIN_READ_1), counter, FALLING);
}
 
void loop()
{
 if (millis() - timeOld >= 1000)
 {
 detachInterrupt(digitalPinToInterrupt(PIN_READ_1));
 rpm = pulses1 * 1000 / PULSES_PER_ROTATION;
 Serial.println((String)"rpm1:"+rpm);
 port1.println(rpm);
 timeOld = millis();
 pulses1 = 0;
 attachInterrupt(digitalPinToInterrupt(PIN_READ_1), counter, FALLING);
   
   
 detachInterrupt(digitalPinToInterrupt(PIN_READ_2));
 rpm = pulses2 * 1000 / PULSES_PER_ROTATION;
 Serial.println((String)"rpm2:"+rpm);
 port2.println(rpm);
 timeOld = millis();
 pulses2 = 0;
 attachInterrupt(digitalPinToInterrupt(PIN_READ_2), counter2, FALLING);
   
 }
}
